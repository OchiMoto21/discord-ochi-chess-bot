AudioPlayerError: aborted
          at connResetException (node:internal/errors:691:14)
          at TLSSocket.socketCloseListener (node:_http_client:407:19)
          at TLSSocket.emit (node:events:406:35)
          at node:net:672:12
          at TCP.done (node:_tls_wrap:580:7)
      Emitted 'error' event on AudioPlayer instance at:
          at OggDemuxer.onStreamError (C:\Users\LENOVO\Desktop\ChessBot\node_modules\@discordjs\voice\dist\audio\AudioPlayer.js:213:22)        
          at Object.onceWrapper (node:events:514:26)
          at OggDemuxer.emit (node:events:406:35)
          at emitErrorNT (node:internal/streams/destroy:157:8)
          at emitErrorCloseNT (node:internal/streams/destroy:122:3)
          at processTicksAndRejections (node:internal/process/task_queues:83:21) {
        resource: <ref *4> AudioResource {
          playbackDuration: 168720,
          started: true,
          silenceRemaining: -1,
          edges: [
            <ref *1> {
              type: 'ffmpeg ogg',
              to: Node {
                edges: [ [Object], [Object], [Object] ],
                type: 'ogg/opus'
              },
              cost: 2,
              transformer: [Function: transformer],
              from: Node { edges: [ [Object], [Circular *1] ], type: 'arbitrary' }
            },
            <ref *2> {
              type: 'ogg/opus demuxer',
              to: Node { edges: [ [Object] ], type: 'opus' },
              cost: 1,
              transformer: [Function: transformer],
              from: Node {
                edges: [ [Circular *2], [Object], [Object] ],
                type: 'ogg/opus'
              }
            }
          ],
          playStream: OggDemuxer {
            _readableState: ReadableState {
              objectMode: true,
              highWaterMark: 16,
              buffer: BufferList {
                head: { data: [Buffer [Uint8Array]], next: [Object] },
                tail: { data: [Buffer [Uint8Array]], next: null },
                length: 314
              },
              length: 314,
              pipes: [],
              flowing: null,
              ended: false,
              endEmitted: false,
              reading: false,
              constructed: true,
              sync: false,
              needReadable: false,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: true,
              emitClose: true,
              autoDestroy: true,
              destroyed: true,
              errored: Error: aborted
                  at connResetException (node:internal/errors:691:14)
                  at TLSSocket.socketCloseListener (node:_http_client:407:19)
                  at TLSSocket.emit (node:events:406:35)
                  at node:net:672:12
                  at TCP.done (node:_tls_wrap:580:7) {
                code: 'ECONNRESET'
              },
              closed: true,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: null
            },
            _events: [Object: null prototype] {
              prefinish: [Function: prefinish],
              close: [ [Function (anonymous)], [Function: onclose] ],
              end: [Function: onend],
              finish: [Function: onfinish],
              error: [Function: onerror]
            },
            _eventsCount: 5,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: true,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: true,
              defaultEncoding: 'utf8',
              length: 73030,
              writing: true,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: [Function: nop],
              writelen: 73030,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 1,
              constructed: true,
              prefinished: false,
              errorEmitted: true,
              emitClose: true,
              autoDestroy: true,
              errored: Error: aborted
                  at connResetException (node:internal/errors:691:14)
                  at TLSSocket.socketCloseListener (node:_http_client:407:19)
                  at TLSSocket.emit (node:events:406:35)
                  at node:net:672:12
                  at TCP.done (node:_tls_wrap:580:7) {
                code: 'ECONNRESET'
              },
              closed: true,
              closeEmitted: false,
              [Symbol(kOnFinished)]: []
            },
            allowHalfOpen: true,
            _remainder: null,
            _head: null,
            _bitstream: null,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: [Function: bound onwrite]
          },
          metadata: null,
          silencePaddingFrames: 5,
          audioPlayer: <ref *3> AudioPlayer {
            _events: [Object: null prototype] { finish: [Function (anonymous)] },
            _eventsCount: 1,
            _maxListeners: undefined,
            subscribers: [
              PlayerSubscription {
                connection: VoiceConnection {
                  _events: [Object: null prototype] {},
                  _eventsCount: 0,
                  _maxListeners: undefined,
                  debug: null,
                  rejoinAttempts: 0,
                  receiver: [VoiceReceiver],
                  onNetworkingClose: [Function: bound onNetworkingClose],
                  onNetworkingStateChange: [Function: bound onNetworkingStateChange],
                  onNetworkingError: [Function: bound onNetworkingError],
                  onNetworkingDebug: [Function: bound onNetworkingDebug],
                  _state: [Object],
                  packets: [Object],
                  joinConfig: [Object],
                  [Symbol(kCapture)]: false
                },
                player: [Circular *3]
              }
            ],
            _state: {
              status: 'playing',
              missedFrames: 0,
              playbackDuration: 168720,
              resource: [Circular *4],
              onStreamError: [Function: onStreamError]
            },
            behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
            debug: [Function (anonymous)],
            [Symbol(kCapture)]: false
          }
        }
      }